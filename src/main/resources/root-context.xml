<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	

	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	 	<property name="url" value="jdbc:oracle:thin:@javachip.iptime.org:1521:xe"/>
	 	<property name="username" value="nullcompany"/>
	 	<property name="password" value="nullcompany"/> 
	 	<property name="defaultAutoCommit" value="false"/>
	 </bean>
	 
	 <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
	 
	 	<property name="configLocation" value="classpath:mybatis-config.xml"/>
	 	<property name="dataSource" ref="dataSource"/>
	 </bean> 
	 
	 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	 	<constructor-arg ref="sqlSession"/>
	 </bean>
	 
	
	 <bean id="transactionManager"
	 		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 		<property name="dataSource" ref="dataSource"/>
	 </bean>
	 
	 <!--  파일 업로드에 사용할 bean 객체 등록 
	 		MultipartResolver
	 		CommonsMultipartResolver 빈을 설정하여 파일 업로드를 처리한다. 
	 		MultipartFile클래스를 이용하여 업로드한 파일 정보를 얻어온다. 
	 		JSP 파일의 form태그안에 enctype을 multipart/form-data 설정, method타입을 post로 설정 
	 		(commons-fileupload, commons-io jar 파일이 있어야한다. )
	 		
	 		maxUploadSize : 최대 업로드 가능한 바이트 크기 기본값은 -1 (-1의 의미는 제한이 없음을 의미한다.)
	 		maxInMemorySize : 디스크에 임시파일을 생성하기 전에 메모리에 보관할 수 있는 바이트 크기, 기본 값은 10240 바이트이다. 
	 		
	 
	  -->
	  
	  <bean id="multipartResolver"
	  		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	  			<property name="maxUploadSize" value="100000000"></property>
	  			<property name="maxInMemorySize" value="100000000"></property>
	  		</bean>
	</beans>












