<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="approvalMapper">
	
	<!-- 문서 리스트 뽑기 -->
	<resultMap id="documentResultSet" type="Document">
		<id property="docTempNo" column="DOC_TEMP_NO"/>
		<result property="docNo" column="DOC_NO"/>
		<result property="formCode" column="FORM_CODE"/>
		<result property="drafterNo" column="DRAFTER_NO"/>
		<result property="drafterName" column="DRAFTER_NAME"/>
		<result property="drafterDeptNo" column="DRAFTER_DEPT_NO"/>
		<result property="drafterDeptName" column="DRAFTER_DEPT_NAME"/>
		<result property="drafterRankNo" column="DRAFTER_RANK_NO"/>
		<result property="drafterRankName" column="DRAFTER_RANK_NAME"/>
		<result property="dTitle" column="DTITLE"/>
		<result property="dContent" column="DCONTENT"/>
		<result property="draftDate" column="DRAFT_DATE"/>
		<result property="completeDate" column="COMPLETE_DATE"/>
		<result property="formNo" column="FORM_NO"/>
		<result property="formName" column="FORM_NAME"/>
		<result property="turnNo" column="TURN_NO"/>
		<result property="rStatus" column="R_STATUS"/>
		<result property="dStatus" column="D_STATUS"/>
	</resultMap>
	
	<!-- 결재스텝 리스트 뽑기 -->
	<resultMap id="stepResultSet" type="Step">
		<result property="docTempNo" column="DOC_NO"/>
		<result property="lineNo" column="LINE_NO"/>
		<result property="staffNo" column="STAFF_NO"/>
		<result property="staffName" column="STAFF_NAME"/>
		<result property="staffRankNo" column="STAFF_RANK_NO"/>
		<result property="staffRankName" column="STAFF_RANK_NAME"/>
		<result property="stepPriority" column="STAFF_PRIORITY"/>
		<result property="apprStatus" column="APPR_STATUS"/>
		<result property="apprDate" column="APPR_DATE"/>
		<result property="rStatus" column="R_STATUS"/>
	</resultMap>
	
	<!-- 휴가 문서 정보 가져오기 -->
	<resultMap id="leaveResultSet" type="Leave">
		<result property="docTempNo" column="DOC_NO"/>
		<result property="type" column="TYPE"/>
		<result property="reason" column="REASON"/>
		<result property="startDate" column="START_DATE"/>
		<result property="endDate" column="END_DATE"/>
		<result property="totalDate" column="TOTAL_DATE"/>
	</resultMap>
	
	<!-- 휴직 문서 정보 가져오기 -->
	<resultMap id="absenceResultSet" type="Absence">
		<result property="docTempNo" column="DOC_NO"/>
		<result property="reason" column="REASON"/>
		<result property="startDate" column="START_DATE"/>
		<result property="endDate" column="END_DATE"/>
		<result property="totalDate" column="TOTAL_DATE"/>
	</resultMap>
	
	<!-- 사직서 정보 가져오기 -->
	<resultMap id="resignResultSet" type="Resign">
		<result property="docTempNo" column="DOC_NO"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
	</resultMap>
	
	<!-- 부서 정보 가져오기 -->
	<resultMap id="deptResultSet" type="DeptList">
		<id property="deptNo" column="DEPT_NO"/>
		<result property="deptName" column="DEPT_NAME"/>
	</resultMap>
	
	<!-- 부서별 사원 정보 가져오기 -->
	<resultMap id="deptStaffResultSet" type="DivDeptStaff">
		<id property="memNo" column="MEM_NO"/>
		<result property="name" column="NAME"/>
		<result property="rankNo" column="RANK_NO"/>
		<result property="rankName" column="RANK_NAME"/>
	</resultMap>
	
	<!-- 진행중인 문서(전체) 게시글 갯수 -->
	<select id="getProgressAllListCount" resultType="_int">
		SELECT
		COUNT(*)
		FROM
		    (SELECT 
		           DISTINCT AST.DOC_NO AS DOC_TEMP_NO,
			       AD.DOC_NO,
			       AF.FORM_CODE,
			       AD.DTITLE,
			       AD.DCONTENT,
			       AD.DRAFTER_NO,
			       M.NAME AS DRAFTER_NAME,
			       AD.DRAFTER_DEPT_NO,
	       		   D.DEPT_NAME AS DRAFTER_DEPT_NAME,
	               AD.DRAFTER_RANK_NO,
	               R.RANK_NAME AS DRAFTER_RANK_NAME,
			       AD.DRAFT_DATE,
			       AD.COMPLETE_DATE,
			       AD.FORM_NO,
			       AF.FORM_NAME,
			       AD.TURN_NO,
			       AD.R_STATUS,
			       AD.D_STATUS
		    FROM APPROVAL_DOCUMENT AD
		    JOIN MEMBER M ON(AD.DRAFTER_NO = M.MEM_NO)
		    JOIN APPROVAL_FORM AF ON(AD.FORM_NO = AF.FORM_NO)
		    JOIN APPROVAL_STEP AST ON(AD.DOC_TEMP_NO = AST.DOC_NO)
		    JOIN DEPARTMENT D ON(AD.DRAFTER_DEPT_NO = D.DEPT_NO)
			JOIN RANK R ON(AD.DRAFTER_RANK_NO = R.RANK_NO)
		    WHERE
		         AD.D_STATUS = 'N'
		    AND  AD.COMPLETE_DATE IS NULL
		    AND  AD.DOC_NO IS NOT NULL
		    AND (AD.DRAFTER_NO = #{memNo} OR AST.STAFF_NO = #{memNo})
		    ORDER BY AD.DRAFT_DATE DESC)
	</select>
	
	<!-- 진행 중인 문서 게시물 리스트 -->
	<select id="selectProgressAllList" resultMap="documentResultSet">
		    SELECT 
	           DISTINCT AST.DOC_NO AS DOC_TEMP_NO,
		       AD.DOC_NO,
		       AF.FORM_CODE,
		       AD.DTITLE,
		       AD.DCONTENT,
		       AD.DRAFTER_NO,
		       M.NAME AS DRAFTER_NAME,
		       AD.DRAFTER_DEPT_NO,
       		   D.DEPT_NAME AS DRAFTER_DEPT_NAME,
               AD.DRAFTER_RANK_NO,
               R.RANK_NAME AS DRAFTER_RANK_NAME,
		       AD.DRAFT_DATE,
		       AD.COMPLETE_DATE,
		       AD.FORM_NO,
		       AF.FORM_NAME,
		       AD.TURN_NO,
		       AD.R_STATUS,
		       AD.D_STATUS
		    FROM APPROVAL_DOCUMENT AD
		    JOIN MEMBER M ON(AD.DRAFTER_NO = M.MEM_NO)
		    JOIN APPROVAL_FORM AF ON(AD.FORM_NO = AF.FORM_NO)
		    JOIN APPROVAL_STEP AST ON(AD.DOC_TEMP_NO = AST.DOC_NO)
		    JOIN DEPARTMENT D ON(AD.DRAFTER_DEPT_NO = D.DEPT_NO)
			JOIN RANK R ON(AD.DRAFTER_RANK_NO = R.RANK_NO)
		    WHERE
		         AD.D_STATUS = 'N'
		    AND  AD.COMPLETE_DATE IS NULL
		    AND  AD.DOC_NO IS NOT NULL
		    AND (AD.DRAFTER_NO = #{memNo} OR AST.STAFF_NO = #{memNo})
		    ORDER BY AD.DRAFT_DATE DESC
	</select>
	
	<!-- 결재자 리스트 -->
	<select id="selectStepList" resultMap="stepResultSet">
		SELECT 
		  A.DOC_NO 
		, A.LINE_NO
		, L.LINE_NAME
		, A.STAFF_NO
		, M.NAME AS STAFF_NAME
		, A.STAFF_RANK_NO
		, R.RANK_NAME AS STAFF_RANK_NAME
		, A.STAFF_PRIORITY
		, A.APPR_STATUS
		, A.APPR_DATE
		, A.R_STATUS
		FROM APPROVAL_STEP A
		JOIN APPROVAL_LINE L ON(A.LINE_NO = L.LINE_NO)
		JOIN MEMBER M ON(A.STAFF_NO = M.MEM_NO)
		JOIN RANK R ON(A.STAFF_RANK_NO = R.RANK_NO)
		WHERE A.DOC_NO = #{docTempNo}
		ORDER BY A.STAFF_PRIORITY
	</select>
	
	<!-- 문서함(전체) 게시글 갯수 -->
	<select id="getCompleteAllListCount" resultType="_int">
		SELECT
		COUNT(*)
		FROM
		    (SELECT 
		           DISTINCT AST.DOC_NO AS DOC_TEMP_NO,
			       AD.DOC_NO,
			       AF.FORM_CODE,
			       AD.DTITLE,
			       AD.DCONTENT,
			       AD.DRAFTER_NO,
			       M.NAME AS DRAFTER_NAME,
			       AD.DRAFTER_DEPT_NO,
	       		   D.DEPT_NAME AS DRAFTER_DEPT_NAME,
	               AD.DRAFTER_RANK_NO,
	               R.RANK_NAME AS DRAFTER_RANK_NAME,
			       AD.DRAFT_DATE,
			       AD.COMPLETE_DATE,
			       AD.FORM_NO,
			       AF.FORM_NAME,
			       AD.TURN_NO,
			       AD.R_STATUS,
			       AD.D_STATUS
		    FROM APPROVAL_DOCUMENT AD
		    JOIN MEMBER M ON(AD.DRAFTER_NO = M.MEM_NO)
		    JOIN APPROVAL_FORM AF ON(AD.FORM_NO = AF.FORM_NO)
		    JOIN APPROVAL_STEP AST ON(AD.DOC_TEMP_NO = AST.DOC_NO)
		    JOIN DEPARTMENT D ON(AD.DRAFTER_DEPT_NO = D.DEPT_NO)
			JOIN RANK R ON(AD.DRAFTER_RANK_NO = R.RANK_NO)
		    WHERE
		         AD.D_STATUS = 'N'
		    AND  AD.COMPLETE_DATE IS NOT NULL
		    AND  AD.DOC_NO IS NOT NULL
		    AND (AD.DRAFTER_NO = #{memNo} OR AST.STAFF_NO = #{memNo})
		    ORDER BY AD.DRAFT_DATE DESC)
	</select>
	
	<!-- 문서함 게시물 리스트 -->
	<select id="selectCompleteAllList" resultMap="documentResultSet">
		SELECT 
	           DISTINCT AST.DOC_NO AS DOC_TEMP_NO,
		       AD.DOC_NO,
		       AF.FORM_CODE,
		       AD.DTITLE,
		       AD.DCONTENT,
		       AD.DRAFTER_NO,
		       M.NAME AS DRAFTER_NAME,
		       AD.DRAFTER_DEPT_NO,
       		   D.DEPT_NAME AS DRAFTER_DEPT_NAME,
               AD.DRAFTER_RANK_NO,
               R.RANK_NAME AS DRAFTER_RANK_NAME,
		       AD.DRAFT_DATE,
		       AD.COMPLETE_DATE,
		       AD.FORM_NO,
		       AF.FORM_NAME,
		       AD.TURN_NO,
		       AD.R_STATUS,
		       AD.D_STATUS
		    FROM APPROVAL_DOCUMENT AD
		    JOIN MEMBER M ON(AD.DRAFTER_NO = M.MEM_NO)
		    JOIN APPROVAL_FORM AF ON(AD.FORM_NO = AF.FORM_NO)
		    JOIN APPROVAL_STEP AST ON(AD.DOC_TEMP_NO = AST.DOC_NO)
		    JOIN DEPARTMENT D ON(AD.DRAFTER_DEPT_NO = D.DEPT_NO)
			JOIN RANK R ON(AD.DRAFTER_RANK_NO = R.RANK_NO)
		    WHERE
		         AD.D_STATUS = 'N'
		    AND  AD.COMPLETE_DATE IS NOT NULL
		    AND  AD.DOC_NO IS NOT NULL
		    AND (AD.DRAFTER_NO = #{memNo} OR AST.STAFF_NO = #{memNo})
		    ORDER BY AD.DRAFT_DATE DESC
	</select>
	
	<!-- 문서 상세보기 -->
	<select id="approvalDetail" parameterType="String" resultMap="documentResultSet">
		SELECT
		       DISTINCT AST.DOC_NO AS DOC_TEMP_NO,
		       AD.DOC_NO,
		       AF.FORM_CODE,
		       AD.DTITLE,
		       AD.DCONTENT,
		       AD.DRAFTER_NO,
		       M.NAME AS DRAFTER_NAME,
		       AD.DRAFTER_DEPT_NO,
		       D.DEPT_NAME AS DRAFTER_DEPT_NAME,
		       AD.DRAFTER_RANK_NO,
		       R.RANK_NAME AS DRAFTER_RANK_NAME,
		       AD.DRAFT_DATE,
		       AD.COMPLETE_DATE,
		       AD.FORM_NO,
		       AF.FORM_NAME,
		       AD.TURN_NO,
		       AD.R_STATUS,
		       AD.D_STATUS
		FROM APPROVAL_DOCUMENT AD
		JOIN MEMBER M ON(AD.DRAFTER_NO = M.MEM_NO)
		JOIN APPROVAL_FORM AF ON(AD.FORM_NO = AF.FORM_NO)
		JOIN APPROVAL_STEP AST ON(AD.DOC_TEMP_NO = AST.DOC_NO)
		JOIN DEPARTMENT D ON(AD.DRAFTER_DEPT_NO = D.DEPT_NO)
		JOIN RANK R ON(AD.DRAFTER_RANK_NO = R.RANK_NO)
		WHERE
		     AD.DOC_NO = #{docNo}
	</select>
	
	<!-- 휴가 문서 정보 가져오기 -->
	<select id="selectLeaveInfo" parameterType="String" resultMap="leaveResultSet">
		SELECT
			*
		FROM
			APPROVAL_LEAVE
		WHERE
			DOC_NO = #{docTempNo}
	</select>
	
	<!-- 휴직 문서 정보 가져오기 -->
	<select id="selectAbsenceInfo" parameterType="String" resultMap="absenceResultSet">
		SELECT
		 	*
		FROM
		    APPROVAL_ABSENCE
		WHERE DOC_NO = #{docTempNo}
	</select>
	
	<!-- 사직서 정보 가져오기 -->
	<select id="selectResignInfo" parameterType="String" resultMap="resignResultSet">
		SELECT
		 	*
		FROM
		    APPROVAL_RESIGN
		WHERE DOC_NO = #{docTempNo}
	</select>
	
	<!-- 결재하기(스텝 상태값 변경) -->
	<update id="stepSigning" parameterType="map">
		UPDATE 
			APPROVAL_STEP 
		SET 
			APPR_STATUS = 'Y',
			APPR_DATE = SYSDATE
		WHERE 
			DOC_NO = #{docTempNo}
		AND STAFF_NO = #{memNo}
	</update>
	
	<!-- 결재하기(문서 상태값 변경) -->
	<update id="documentSigning" parameterType="map">
		UPDATE
			APPROVAL_DOCUMENT
		SET
			TURN_NO = #{stepPriority}+1
		WHERE
			DOC_TEMP_NO=#{docTempNo}
	</update>
	
	<!-- 최종 결재하기(문서 상태값 변경) -->
	<update id="decisionSigning" parameterType="map">
		UPDATE 
			APPROVAL_DOCUMENT
		SET
			TURN_NO = #{stepPriority},
			COMPLETE_DATE = SYSDATE
		WHERE
			DOC_TEMP_NO= #{docTempNo}
	</update>
	
	<!-- 반려하기(스텝 상태값 변경) -->
	<update id="stepRejecting" parameterType="map">
		UPDATE 
			APPROVAL_STEP 
		SET
			APPR_STATUS = 'Y',
			APPR_DATE = SYSDATE,
			R_STATUS = 'Y'
		WHERE 
			DOC_NO = #{docTempNo}
		AND STAFF_NO = #{memNo}
	</update>
	
	<!-- 최종 반려하기(문서 상태값 변경) -->
	<update id="decisionRejecting" parameterType="map">
		UPDATE 
			APPROVAL_DOCUMENT
		SET
			TURN_NO = #{stepListCount},
			COMPLETE_DATE = SYSDATE,
			R_STATUS = 'Y'
		WHERE
			DOC_TEMP_NO= #{docTempNo}
	</update>
	
	<!-- 확인하기(스텝 상태값 변경) -->
	<update id="stepReference" parameterType="map">
		UPDATE 
			APPROVAL_STEP 
		SET
			APPR_STATUS = 'Y'
		WHERE 
			DOC_NO = #{docTempNo}
		AND STAFF_NO = #{memNo}
	</update>
	
	<!-- 회람문서 최종 확인하기(문서 상태값 변경) -->
	<update id="decisionReference" parameterType="String">
		UPDATE 
			APPROVAL_DOCUMENT
		SET
			COMPLETE_DATE = SYSDATE
		WHERE
			DOC_TEMP_NO= #{docTempNo}
	</update>
	
	<!-- 임시 문서 저장하기 -->
	<insert id="insertTempDocument" parameterType="Document">
		<selectKey keyProperty="docTempNo" resultType="String" order="BEFORE">
			SELECT TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') FROM DUAL
		</selectKey>
		INSERT INTO APPROVAL_DOCUMENT VALUES(#{docTempNo},NULL,#{formNo}, #{drafterNo}, #{drafterDeptNo}, #{drafterRankNo}
											,NULL,NULL,SYSDATE,NULL,DEFAULT,DEFAULT,DEFAULT)
	</insert>
	
	<!-- 모든 부서정보 가져오기 -->
	<select id="selectAllDept" resultMap="deptResultSet">
		SELECT
			*
		FROM
			DEPARTMENT
		ORDER BY DEPT_NO
	</select>
	
	<!-- 부서별 사원정보 가져오기(기안자,이미 올라간 스텝 제외) -->
	<select id="selectDeptStaff" parameterType="map" resultMap="deptStaffResultSet">
		SELECT
		    MEM_NO
		,   NAME
		,   M.RANK_NO AS RANK_NO
		,   R.RANK_NAME AS RANK_NAME
		FROM
    		MEMBER M
		JOIN RANK R ON(M.RANK_NO = R.RANK_NO)
		WHERE
		    MEM_NO != (SELECT 
		                DRAFTER_NO
		              FROM
		                APPROVAL_DOCUMENT
		              WHERE 
		                DOC_TEMP_NO = #{docTempNo})
		AND
		    MEM_NO NOT IN (SELECT
		                 STAFF_NO
		               FROM
		                 APPROVAL_STEP
		               WHERE
		                 DOC_NO = #{docTempNo})
		AND
   			M_STATUS = 'Y'
		AND
		    DEPT_NO = #{deptNo}
		ORDER BY RANK_NO
	</select>
	
	<!-- 문서에 포함된 결재자 수 가져오기 -->
	<select id="apprStepListCount" parameterType="Step" resultType="_int">
		SELECT
		    COUNT(*)
		FROM
		    (SELECT
		        *
		     FROM
		         APPROVAL_STEP
		     WHERE
		         DOC_NO = #{docTempNo}
		     AND LINE_NO = 1)
	</select>
	
	<!-- 결재자 등록하기 -->
	<insert id="apprStepInsert" parameterType="Step">
		INSERT INTO APPROVAL_STEP VALUES(#{docTempNo},#{lineNo},#{staffNo},#{staffRankNo},#{stepPriority},DEFAULT,NULL,DEFAULT)
	</insert>
	
	<!-- 등록한 결재자 정보 가져오기 -->
	<select id="currentStepInfo" parameterType="Step" resultMap="stepResultSet">
		SELECT 
		    STAFF_NO
		,   LINE_NO
		,   STAFF_RANK_NO
		,   M.NAME AS STAFF_NAME
		,   R.RANK_NAME AS STAFF_RANK_NAME
		FROM
		    APPROVAL_STEP A
		JOIN MEMBER M ON(A.STAFF_NO = M.MEM_NO)
		JOIN RANK R ON(A.STAFF_RANK_NO = R.RANK_NO)
		WHERE
		    DOC_NO = #{docTempNo}
		AND STAFF_NO = #{staffNo}
	</select>
	
	<!-- 참조자,수신자 등록하기 -->
	<insert id="notApprStepInsert" parameterType="Step">
		INSERT INTO APPROVAL_STEP VALUES(#{docTempNo},#{lineNo},#{staffNo},#{staffRankNo},NULL,DEFAULT,NULL,DEFAULT)
	</insert>
	
	<!-- 스텝 삭제하기 -->
	<delete id="deleteStep" parameterType="map">
		DELETE FROM APPROVAL_STEP WHERE DOC_NO = #{docTempNo} AND STAFF_NO = #{staffNo}
	</delete>
	
	<!-- 문서 기안하기 -->
	<update id="insertDocument" parameterType="Document">
		UPDATE 
			APPROVAL_DOCUMENT 
		SET 
			DOC_NO = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		,	DTITLE = #{dTitle}
		,	DCONTENT = #{dContent}
		,   TURN_NO = 1 
		WHERE 
			DOC_TEMP_NO = #{docTempNo}
	</update>
	
	<!-- 페이지 나갈 때 스텝 삭제 -->
	<delete id="deleteTempStep" parameterType="String">
		DELETE FROM APPROVAL_STEP WHERE DOC_NO = #{docTempNo}
	</delete>
	
	<!-- 페이지 나갈 때 문서 삭제 -->
	<delete id="deleteTempDocument" parameterType="String">
		DELETE FROM APPROVAL_DOCUMENT WHERE DOC_TEMP_NO = #{docTempNo}
	</delete>
	
	<!-- 휴가 정보 기록하기(디테일용) -->
	<insert id="insertLeaveInfo" parameterType="Leave">
		INSERT INTO APPROVAL_LEAVE VALUES( #{docTempNo}, #{type}, #{reason}, #{startDate}, #{endDate}, #{totalDate})
	</insert>
	
	<!-- 휴가 관리용 데이터 입력하기 -->
	<insert id="recordingLeave" parameterType="map">
		INSERT INTO RECORD_LEAVE VALUES
			(LEAVE_RECORD_SEQ.NEXTVAL,#{drafterNo},#{typeNo},#{startDate},#{totalDate},NULL,'결재중',SYSDATE,#{reason},#{docTempNo})
	</insert>
	
	<!-- 휴가 관리용 데이터 업데이트(결재완료) -->
	<update id="completeRecordingLeave" parameterType="String">
		UPDATE RECORD_LEAVE SET L_STATUS = '결재완료' WHERE DOC_TEMP_NO = #{docTempNo}
	</update>
	
	<!-- 휴가 관리용 데이터 업데이트(반려) -->
	<update	id="rejectRecodingLeave">
		UPDATE RECORD_LEAVE SET L_STATUS = '반려' WHERE DOC_TEMP_NO = #{docTempNo}
	</update>
	
	<!-- 휴직 정보 기록하기(디테일용) -->
	<insert id="insertAbsenceInfo" parameterType="Absence">
		INSERT INTO APPROVAL_ABSENCE VALUES( #{docTempNo}, #{reason}, #{startDate}, #{endDate}, #{totalDate})
	</insert>
	
	<!-- 휴직 관리용 데이터 입력하기 -->
	<insert id="recordingAbsence" parameterType="map">
		INSERT INTO ABSENCE VALUES (ABSENCE_SEQ.NEXTVAL,#{drafterNo},#{startDate},#{reason},'Y',NULL)
	</insert>
	
	<!-- 사직 정보 기록하기(디테일용) -->
	<insert id="insertResignInfo" parameterType="Resign">
		INSERT INTO APPROVAL_RESIGN VALUES( #{docTempNo}, #{enrollDate})
	</insert>
</mapper>